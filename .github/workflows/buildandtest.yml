# This is a basic workflow to help you get started with Actions

name: BuildAndTest

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
      
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
     BOOST_ROOT: ${{github.workspace}}/3rdparty/boost
     BOOST_URL: https://sourceforge.net/projects/boost/files/boost/1.72.0/boost_1_72_0.tar.bz2/download
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Restore Boost cache
        uses: actions/cache@v2.1.6
        id: cache-boost
        with:
          path: ${{env.BOOST_ROOT}}
          key: boost

      - name: Install Boost
        if: steps.cache-boost.outputs.cache-hit != 'true'
        run: |
          if [ "$OS" == "Windows_NT" ]; then
            # fix up paths to be forward slashes consistently
            BOOST_ROOT=$(echo $BOOST_ROOT | sed 's/\\/\//g')
          fi
          mkdir -p $BOOST_ROOT
          curl --progress-bar --location --output $BOOST_ROOT/download.tar.bz2 $BOOST_URL
          7z -o$BOOST_ROOT x $BOOST_ROOT/download.tar.bz2 -y -bd
          7z -o$BOOST_ROOT x $BOOST_ROOT/download.tar -y -bd
          cd $BOOST_ROOT && cp -r boost_*/* .
          rm -rf boost_*/* download.tar.bz2 download.tar
        shell: bash
        
      # Runs a set of commands using the runners shell
      - name: Build
        run: |
         cd ./src/cpp/dpgen/
         ./build.sh
      - name: upload binary
        uses: actions/upload-artifact@v2
        with:
          name: binary
          path: src/cpp/dpgen/dpgen
         
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: binary
          path: ./src/cpp/dpgen/
          
      - name: Test
        run: |
         cd ./src/cpp/dpgen/
         chmod +x dpgen
         ./test.sh testreport.txt | tee testresult.txt
         status=${PIPESTATUS[0]}
         exit $status
         
      - name: output report
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: src/cpp/dpgen/testreport.txt
      - name: output result
        uses: actions/upload-artifact@v2
        with:
          name: test-result
          path: src/cpp/dpgen/testresult.txt



